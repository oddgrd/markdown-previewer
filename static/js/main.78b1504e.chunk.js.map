{"version":3,"sources":["components/Preview.js","App.js","index.js"],"names":["Preview","props","className","id","style","maximized","styles","previewTitle","max","min","markdown","onClick","handleClick","resize","dangerouslySetInnerHTML","__html","marked","editorText","preview","setOptions","breaks","icon","faExpandAlt","faMarkdown","Editor","state","editorInput","initialMarkdown","maximizedEditor","maximizedPreview","handleChange","bind","handleClickEditor","handleClickPreview","event","this","setState","target","value","editorTitle","onChange","type","editor","React","Component","height","width","maxWidth","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTA8BeA,MA5Bf,SAAiBC,GACf,OACE,gCACE,sBACEC,UAAU,QACVC,GAAG,gBACHC,MACEH,EAAMI,UACFJ,EAAMK,OAAOC,aAAaC,IAC1BP,EAAMK,OAAOC,aAAaE,IANlC,UASGR,EAAMS,SATT,WAUE,wBAAQR,UAAU,0BAA0BS,QAASV,EAAMW,YAA3D,SACGX,EAAMY,YAGX,qBACEV,GAAG,UACHW,wBAAyB,CAAEC,OAAQC,IAAOf,EAAMgB,aAChDb,MACEH,EAAMI,UAAYJ,EAAMK,OAAOY,QAAQV,IAAMP,EAAMK,OAAOY,QAAQT,UCd5EO,IAAOG,WAAW,CAChBC,QAAQ,IAGV,IAAMP,EAAS,cAAC,IAAD,CAAiBQ,KAAMC,MAChCZ,EAAW,cAAC,IAAD,CAAiBW,KAAME,MA0EzBC,E,kDAvEb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,YAAaC,EACbC,iBAAiB,EACjBC,kBAAkB,GAGpB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAVT,E,gDAanB,SAAaG,GACXC,KAAKC,SAAS,CACZV,YAAaQ,EAAMG,OAAOC,U,+BAG9B,WACEH,KAAKC,SAAS,CACZR,iBAAkBO,KAAKV,MAAMG,oB,gCAGjC,WACEO,KAAKC,SAAS,CACZP,kBAAmBM,KAAKV,MAAMI,qB,oBAGlC,WACE,OACE,sBAAK1B,GAAG,YAAR,UACE,sBACED,UAAU,QACVC,GAAG,eACHC,MACE+B,KAAKV,MAAMG,gBACPtB,EAAOiC,YAAY/B,IACnBF,EAAOiC,YAAY9B,IAN3B,UASGC,EATH,UAUE,wBACER,UAAU,0BACVS,QAASwB,KAAKH,kBAFhB,SAIGnB,OAGL,0BACEV,GAAG,SACHmC,MAAOH,KAAKV,MAAMC,YAClBc,SAAUL,KAAKL,aACfW,KAAK,OACLrC,MACE+B,KAAKV,MAAMG,gBAAkBtB,EAAOoC,OAAOlC,IAAMF,EAAOoC,OAAOjC,MAInE,cAAC,EAAD,CACEQ,WAAYD,IAAOmB,KAAKV,MAAMC,aAC9BrB,UAAW8B,KAAKV,MAAMI,iBACtBjB,YAAauB,KAAKF,mBAClBvB,SAAUA,EACVG,OAAQA,EACRP,OAAQA,W,GAjEGqC,IAAMC,WAyErBtC,EAAS,CACboC,OAAQ,CACNjC,IAAK,CACHoC,OAAQ,MACRC,MAAO,MACPC,SAAU,MACVC,UAAW,OAEbxC,IAAK,CACHqC,OAAQ,MACRC,MAAO,MACPC,SAAU,MACVC,UAAW,QAGfT,YAAa,CACX9B,IAAK,CACHqC,MAAO,OAETtC,IAAK,CACHsC,MAAO,QAGX5B,QAAS,CACPT,IAAK,CACHoC,OAAQ,MACRC,MAAO,OAETtC,IAAK,CACHqC,OAAQ,MACRC,MAAO,QAGXvC,aAAc,CACZE,IAAK,CACHqC,MAAO,OAETtC,IAAK,CACHsC,MAAO,SAKPnB,EAAe,qdC/HrBsB,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,IAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.78b1504e.chunk.js","sourcesContent":["import React from \"react\";\nimport marked from \"marked\";\nfunction Preview(props) {\n  return (\n    <div>\n      <div\n        className=\"title\"\n        id=\"preview-title\"\n        style={\n          props.maximized\n            ? props.styles.previewTitle.max\n            : props.styles.previewTitle.min\n        }\n      >\n        {props.markdown} Preview\n        <button className=\"enlarge btn shadow-none\" onClick={props.handleClick}>\n          {props.resize}\n        </button>\n      </div>\n      <div\n        id=\"preview\"\n        dangerouslySetInnerHTML={{ __html: marked(props.editorText) }}\n        style={\n          props.maximized ? props.styles.preview.max : props.styles.preview.min\n        }\n      ></div>\n    </div>\n  );\n}\n\nexport default Preview;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMarkdown } from \"@fortawesome/free-brands-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport marked from \"marked\";\nimport Preview from \"./components/Preview\";\n\nmarked.setOptions({\n  breaks: true,\n});\n\nconst resize = <FontAwesomeIcon icon={faExpandAlt} />;\nconst markdown = <FontAwesomeIcon icon={faMarkdown} />;\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorInput: initialMarkdown,\n      maximizedEditor: false,\n      maximizedPreview: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClickEditor = this.handleClickEditor.bind(this);\n    this.handleClickPreview = this.handleClickPreview.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      editorInput: event.target.value,\n    });\n  }\n  handleClickEditor() {\n    this.setState({\n      maximizedEditor: !this.state.maximizedEditor,\n    });\n  }\n  handleClickPreview() {\n    this.setState({\n      maximizedPreview: !this.state.maximizedPreview,\n    });\n  }\n  render() {\n    return (\n      <div id=\"container\">\n        <div\n          className=\"title\"\n          id=\"editor-title\"\n          style={\n            this.state.maximizedEditor\n              ? styles.editorTitle.max\n              : styles.editorTitle.min\n          }\n        >\n          {markdown} Editor\n          <button\n            className=\"enlarge btn shadow-none\"\n            onClick={this.handleClickEditor}\n          >\n            {resize}\n          </button>\n        </div>\n        <textarea\n          id=\"editor\"\n          value={this.state.editorInput}\n          onChange={this.handleChange}\n          type=\"text\"\n          style={\n            this.state.maximizedEditor ? styles.editor.max : styles.editor.min\n          }\n        ></textarea>\n\n        <Preview\n          editorText={marked(this.state.editorInput)}\n          maximized={this.state.maximizedPreview}\n          handleClick={this.handleClickPreview}\n          markdown={markdown}\n          resize={resize}\n          styles={styles}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Editor;\nconst styles = {\n  editor: {\n    min: {\n      height: \"19%\",\n      width: \"27%\",\n      maxWidth: \"27%\",\n      minHeight: \"15%\",\n    },\n    max: {\n      height: \"95%\",\n      width: \"95%\",\n      maxWidth: \"95%\",\n      minHeight: \"95%\",\n    },\n  },\n  editorTitle: {\n    min: {\n      width: \"27%\",\n    },\n    max: {\n      width: \"95%\",\n    },\n  },\n  preview: {\n    min: {\n      height: \"78%\",\n      width: \"40%\",\n    },\n    max: {\n      height: \"95%\",\n      width: \"95%\",\n    },\n  },\n  previewTitle: {\n    min: {\n      width: \"40%\",\n    },\n    max: {\n      width: \"95%\",\n    },\n  },\n};\n\nconst initialMarkdown = `# This is my HTML Markdown Previewer\n## This is my sub-header\n\n[Link to Marked Library](https://marked.js.org/)\n\nThis is some inline code \\`<div></div>\\`, pretty good.  \n\n\\`\\`\\`\n// This is multiline code:\nfunction multiLine(line1, line2) {\n  return line1.concat(line2);\n};\n\\`\\`\\`\n - **unordered lists** bold\n - ~~or crossed out~~\n\n 1. or ordered lists\n 2. like this one\n\n\n> even blockquotes!\n\n![React](https://img.icons8.com/ios-glyphs/452/react.png)\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactFCCtest from \"react-fcctest\";\nimport Editor from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n    <ReactFCCtest />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}